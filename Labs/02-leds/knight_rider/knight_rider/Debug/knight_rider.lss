
knight_rider.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000019c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001f0  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000220  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000260  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000897  00000000  00000000  00000280  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000066f  00000000  00000000  00000b17  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000360  00000000  00000000  00001186  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  000014e8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003a3  00000000  00000000  0000150c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000240  00000000  00000000  000018af  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001aef  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 cc 00 	jmp	0x198	; 0x198 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
 */
int main(void)
{
	//setup LEDs
	
	DDRC = DDRC | (1<<LED_1);
  80:	38 9a       	sbi	0x07, 0	; 7
	PORTC = PORTC & ~(1<<LED_1); //active when set to 0
  82:	40 98       	cbi	0x08, 0	; 8
	DDRC = DDRC | (1<<LED_2);
  84:	39 9a       	sbi	0x07, 1	; 7
	PORTC = PORTC & ~(1<<LED_2); //active when set to 0
  86:	41 98       	cbi	0x08, 1	; 8
	DDRC = DDRC | (1<<LED_3);
  88:	3a 9a       	sbi	0x07, 2	; 7
	PORTC = PORTC & ~(1<<LED_3); //active when set to 0
  8a:	42 98       	cbi	0x08, 2	; 8
	DDRC = DDRC | (1<<LED_4);
  8c:	3b 9a       	sbi	0x07, 3	; 7
	PORTC = PORTC & ~(1<<LED_4); //active when set to 0
  8e:	43 98       	cbi	0x08, 3	; 8
	DDRC = DDRC | (1<<LED_5);
  90:	3c 9a       	sbi	0x07, 4	; 7
	PORTC = PORTC & ~(1<<LED_5); //active when set to 0
  92:	44 98       	cbi	0x08, 4	; 8
	
	DDRD = DDRD & ~(1<<BUTTON); //set input
  94:	50 98       	cbi	0x0a, 0	; 10
	PORTD = PORTD | (1<<BUTTON);//enable internal pull-up
  96:	58 9a       	sbi	0x0b, 0	; 11
    // Infinite loop
    while (1)
    {
		if(bit_is_clear(PIND, BUTTON))
		{
		PORTC = PORTC ^ (1<<LED_1);
  98:	51 e0       	ldi	r21, 0x01	; 1
		_delay_ms(BLINK_DELAY);
		PORTC = PORTC ^ (1<<LED_1);
		PORTC = PORTC ^ (1<<LED_2);
  9a:	22 e0       	ldi	r18, 0x02	; 2
		_delay_ms(BLINK_DELAY);
		PORTC = PORTC ^ (1<<LED_2);
		PORTC = PORTC ^ (1<<LED_3);
  9c:	94 e0       	ldi	r25, 0x04	; 4
		_delay_ms(BLINK_DELAY);
		PORTC = PORTC ^ (1<<LED_3);
		PORTC = PORTC ^ (1<<LED_4);
  9e:	88 e0       	ldi	r24, 0x08	; 8
		_delay_ms(BLINK_DELAY);
		PORTC = PORTC ^ (1<<LED_4);
		PORTC = PORTC ^ (1<<LED_5);
  a0:	40 e1       	ldi	r20, 0x10	; 16
	DDRD = DDRD & ~(1<<BUTTON); //set input
	PORTD = PORTD | (1<<BUTTON);//enable internal pull-up
    // Infinite loop
    while (1)
    {
		if(bit_is_clear(PIND, BUTTON))
  a2:	48 99       	sbic	0x09, 0	; 9
  a4:	fe cf       	rjmp	.-4      	; 0xa2 <main+0x22>
		{
		PORTC = PORTC ^ (1<<LED_1);
  a6:	38 b1       	in	r19, 0x08	; 8
  a8:	35 27       	eor	r19, r21
  aa:	38 b9       	out	0x08, r19	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ac:	3f ef       	ldi	r19, 0xFF	; 255
  ae:	64 e3       	ldi	r22, 0x34	; 52
  b0:	7c e0       	ldi	r23, 0x0C	; 12
  b2:	31 50       	subi	r19, 0x01	; 1
  b4:	60 40       	sbci	r22, 0x00	; 0
  b6:	70 40       	sbci	r23, 0x00	; 0
  b8:	e1 f7       	brne	.-8      	; 0xb2 <main+0x32>
  ba:	00 c0       	rjmp	.+0      	; 0xbc <main+0x3c>
  bc:	00 00       	nop
		_delay_ms(BLINK_DELAY);
		PORTC = PORTC ^ (1<<LED_1);
  be:	38 b1       	in	r19, 0x08	; 8
  c0:	35 27       	eor	r19, r21
  c2:	38 b9       	out	0x08, r19	; 8
		PORTC = PORTC ^ (1<<LED_2);
  c4:	38 b1       	in	r19, 0x08	; 8
  c6:	32 27       	eor	r19, r18
  c8:	38 b9       	out	0x08, r19	; 8
  ca:	3f ef       	ldi	r19, 0xFF	; 255
  cc:	64 e3       	ldi	r22, 0x34	; 52
  ce:	7c e0       	ldi	r23, 0x0C	; 12
  d0:	31 50       	subi	r19, 0x01	; 1
  d2:	60 40       	sbci	r22, 0x00	; 0
  d4:	70 40       	sbci	r23, 0x00	; 0
  d6:	e1 f7       	brne	.-8      	; 0xd0 <main+0x50>
  d8:	00 c0       	rjmp	.+0      	; 0xda <main+0x5a>
  da:	00 00       	nop
		_delay_ms(BLINK_DELAY);
		PORTC = PORTC ^ (1<<LED_2);
  dc:	38 b1       	in	r19, 0x08	; 8
  de:	32 27       	eor	r19, r18
  e0:	38 b9       	out	0x08, r19	; 8
		PORTC = PORTC ^ (1<<LED_3);
  e2:	38 b1       	in	r19, 0x08	; 8
  e4:	39 27       	eor	r19, r25
  e6:	38 b9       	out	0x08, r19	; 8
  e8:	3f ef       	ldi	r19, 0xFF	; 255
  ea:	64 e3       	ldi	r22, 0x34	; 52
  ec:	7c e0       	ldi	r23, 0x0C	; 12
  ee:	31 50       	subi	r19, 0x01	; 1
  f0:	60 40       	sbci	r22, 0x00	; 0
  f2:	70 40       	sbci	r23, 0x00	; 0
  f4:	e1 f7       	brne	.-8      	; 0xee <main+0x6e>
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <main+0x78>
  f8:	00 00       	nop
		_delay_ms(BLINK_DELAY);
		PORTC = PORTC ^ (1<<LED_3);
  fa:	38 b1       	in	r19, 0x08	; 8
  fc:	39 27       	eor	r19, r25
  fe:	38 b9       	out	0x08, r19	; 8
		PORTC = PORTC ^ (1<<LED_4);
 100:	38 b1       	in	r19, 0x08	; 8
 102:	38 27       	eor	r19, r24
 104:	38 b9       	out	0x08, r19	; 8
 106:	3f ef       	ldi	r19, 0xFF	; 255
 108:	64 e3       	ldi	r22, 0x34	; 52
 10a:	7c e0       	ldi	r23, 0x0C	; 12
 10c:	31 50       	subi	r19, 0x01	; 1
 10e:	60 40       	sbci	r22, 0x00	; 0
 110:	70 40       	sbci	r23, 0x00	; 0
 112:	e1 f7       	brne	.-8      	; 0x10c <main+0x8c>
 114:	00 c0       	rjmp	.+0      	; 0x116 <main+0x96>
 116:	00 00       	nop
		_delay_ms(BLINK_DELAY);
		PORTC = PORTC ^ (1<<LED_4);
 118:	38 b1       	in	r19, 0x08	; 8
 11a:	38 27       	eor	r19, r24
 11c:	38 b9       	out	0x08, r19	; 8
		PORTC = PORTC ^ (1<<LED_5);
 11e:	38 b1       	in	r19, 0x08	; 8
 120:	34 27       	eor	r19, r20
 122:	38 b9       	out	0x08, r19	; 8
 124:	3f ef       	ldi	r19, 0xFF	; 255
 126:	64 e3       	ldi	r22, 0x34	; 52
 128:	7c e0       	ldi	r23, 0x0C	; 12
 12a:	31 50       	subi	r19, 0x01	; 1
 12c:	60 40       	sbci	r22, 0x00	; 0
 12e:	70 40       	sbci	r23, 0x00	; 0
 130:	e1 f7       	brne	.-8      	; 0x12a <main+0xaa>
 132:	00 c0       	rjmp	.+0      	; 0x134 <main+0xb4>
 134:	00 00       	nop
		_delay_ms(BLINK_DELAY);
		PORTC = PORTC ^ (1<<LED_5);
 136:	38 b1       	in	r19, 0x08	; 8
 138:	34 27       	eor	r19, r20
 13a:	38 b9       	out	0x08, r19	; 8
		PORTC = PORTC ^ (1<<LED_4);
 13c:	38 b1       	in	r19, 0x08	; 8
 13e:	38 27       	eor	r19, r24
 140:	38 b9       	out	0x08, r19	; 8
 142:	3f ef       	ldi	r19, 0xFF	; 255
 144:	64 e3       	ldi	r22, 0x34	; 52
 146:	7c e0       	ldi	r23, 0x0C	; 12
 148:	31 50       	subi	r19, 0x01	; 1
 14a:	60 40       	sbci	r22, 0x00	; 0
 14c:	70 40       	sbci	r23, 0x00	; 0
 14e:	e1 f7       	brne	.-8      	; 0x148 <main+0xc8>
 150:	00 c0       	rjmp	.+0      	; 0x152 <main+0xd2>
 152:	00 00       	nop
		_delay_ms(BLINK_DELAY);
		PORTC = PORTC ^ (1<<LED_4);
 154:	38 b1       	in	r19, 0x08	; 8
 156:	38 27       	eor	r19, r24
 158:	38 b9       	out	0x08, r19	; 8
		PORTC = PORTC ^ (1<<LED_3);
 15a:	38 b1       	in	r19, 0x08	; 8
 15c:	39 27       	eor	r19, r25
 15e:	38 b9       	out	0x08, r19	; 8
 160:	3f ef       	ldi	r19, 0xFF	; 255
 162:	64 e3       	ldi	r22, 0x34	; 52
 164:	7c e0       	ldi	r23, 0x0C	; 12
 166:	31 50       	subi	r19, 0x01	; 1
 168:	60 40       	sbci	r22, 0x00	; 0
 16a:	70 40       	sbci	r23, 0x00	; 0
 16c:	e1 f7       	brne	.-8      	; 0x166 <main+0xe6>
 16e:	00 c0       	rjmp	.+0      	; 0x170 <main+0xf0>
 170:	00 00       	nop
		_delay_ms(BLINK_DELAY);
		PORTC = PORTC ^ (1<<LED_3);
 172:	38 b1       	in	r19, 0x08	; 8
 174:	39 27       	eor	r19, r25
 176:	38 b9       	out	0x08, r19	; 8
		PORTC = PORTC ^ (1<<LED_2);
 178:	38 b1       	in	r19, 0x08	; 8
 17a:	32 27       	eor	r19, r18
 17c:	38 b9       	out	0x08, r19	; 8
 17e:	3f ef       	ldi	r19, 0xFF	; 255
 180:	64 e3       	ldi	r22, 0x34	; 52
 182:	7c e0       	ldi	r23, 0x0C	; 12
 184:	31 50       	subi	r19, 0x01	; 1
 186:	60 40       	sbci	r22, 0x00	; 0
 188:	70 40       	sbci	r23, 0x00	; 0
 18a:	e1 f7       	brne	.-8      	; 0x184 <main+0x104>
 18c:	00 c0       	rjmp	.+0      	; 0x18e <main+0x10e>
 18e:	00 00       	nop
		_delay_ms(BLINK_DELAY);
		PORTC = PORTC ^ (1<<LED_2);				
 190:	38 b1       	in	r19, 0x08	; 8
 192:	32 27       	eor	r19, r18
 194:	38 b9       	out	0x08, r19	; 8
 196:	85 cf       	rjmp	.-246    	; 0xa2 <main+0x22>

00000198 <_exit>:
 198:	f8 94       	cli

0000019a <__stop_program>:
 19a:	ff cf       	rjmp	.-2      	; 0x19a <__stop_program>
